"""add_subscription_tables_with_unique_plan_code

Revision ID: a1bd7c0cf7bf
Revises: 27ebaa8ff467
Create Date: 2025-08-25 13:11:11.346135

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a1bd7c0cf7bf'
down_revision: Union[str, None] = '27ebaa8ff467'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # First, add unique constraint to subscription_plans.plan_code
    op.drop_index('ix_subscription_plans_plan_code', table_name='subscription_plans')
    op.create_index(op.f('ix_subscription_plans_plan_code'), 'subscription_plans', ['plan_code'], unique=True)
    
    # Now create subscription tables
    op.create_table('subscription_change_history',
    sa.Column('id', sa.Integer(), nullable=False, comment='구독변경이력일련번호'),
    sa.Column('user_uuid', sa.String(length=36), nullable=False, comment='사용자고유식별자'),
    sa.Column('subscription_id', sa.String(length=100), nullable=False, comment='구독식별자'),
    sa.Column('change_id', sa.String(length=100), nullable=False, comment='변경식별자'),
    sa.Column('change_type', sa.String(length=30), nullable=False, comment='변경유형'),
    sa.Column('change_reason', sa.String(length=100), nullable=True, comment='변경사유'),
    sa.Column('previous_plan_code', sa.String(length=50), nullable=True, comment='이전요금제코드'),
    sa.Column('new_plan_code', sa.String(length=50), nullable=True, comment='신규요금제코드'),
    sa.Column('previous_status', sa.String(length=20), nullable=True, comment='이전구독상태'),
    sa.Column('new_status', sa.String(length=20), nullable=False, comment='신규구독상태'),
    sa.Column('effective_date', sa.Date(), nullable=False, comment='적용일자'),
    sa.Column('change_requested_at', sa.DateTime(timezone=True), nullable=False, comment='변경요청일시'),
    sa.Column('change_processed_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='변경처리일시'),
    sa.Column('proration_amount', sa.Integer(), nullable=True, comment='일할계산금액'),
    sa.Column('refund_amount', sa.Integer(), nullable=True, comment='환불금액'),
    sa.Column('additional_charge', sa.Integer(), nullable=True, comment='추가청구금액'),
    sa.Column('processed_by', sa.String(length=50), nullable=True, comment='처리자'),
    sa.Column('admin_notes', sa.Text(), nullable=True, comment='관리자메모'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='생성일시'),
    sa.CheckConstraint("change_type IN ('create', 'upgrade', 'downgrade', 'suspend', 'resume', 'cancel', 'expire', 'renew')", name='check_change_type_valid'),
    sa.CheckConstraint("new_status IN ('active', 'suspended', 'cancelled', 'expired')", name='check_new_status_valid'),
    sa.CheckConstraint("previous_status IN ('active', 'suspended', 'cancelled', 'expired') OR previous_status IS NULL", name='check_previous_status_valid'),
    sa.CheckConstraint("processed_by IN ('system', 'admin', 'user') OR processed_by IS NULL", name='check_processed_by_valid'),
    sa.ForeignKeyConstraint(['user_uuid'], ['users.user_uuid'], ),
    sa.PrimaryKeyConstraint('id'),
    comment='구독 변경 이력을 시간순으로 추적하는 테이블'
    )
    op.create_index('idx_subscription_change_effective_date', 'subscription_change_history', ['effective_date'], unique=False)
    op.create_index('idx_subscription_change_processed_at', 'subscription_change_history', ['change_processed_at'], unique=False)
    op.create_index('idx_subscription_change_subscription_id', 'subscription_change_history', ['subscription_id'], unique=False)
    op.create_index('idx_subscription_change_type', 'subscription_change_history', ['change_type'], unique=False)
    op.create_index('idx_subscription_change_user_uuid', 'subscription_change_history', ['user_uuid'], unique=False)
    op.create_index(op.f('ix_subscription_change_history_change_id'), 'subscription_change_history', ['change_id'], unique=True)
    op.create_index(op.f('ix_subscription_change_history_id'), 'subscription_change_history', ['id'], unique=False)
    op.create_index(op.f('ix_subscription_change_history_subscription_id'), 'subscription_change_history', ['subscription_id'], unique=False)
    op.create_index(op.f('ix_subscription_change_history_user_uuid'), 'subscription_change_history', ['user_uuid'], unique=False)
    op.create_table('subscription_master',
    sa.Column('id', sa.Integer(), nullable=False, comment='구독마스터일련번호'),
    sa.Column('user_uuid', sa.String(length=36), nullable=False, comment='사용자고유식별자'),
    sa.Column('subscription_id', sa.String(length=100), nullable=False, comment='구독식별자'),
    sa.Column('plan_code', sa.String(length=50), nullable=False, comment='요금제코드'),
    sa.Column('subscription_status', sa.String(length=20), nullable=False, comment='구독상태'),
    sa.Column('subscription_start_date', sa.Date(), nullable=False, comment='구독시작일'),
    sa.Column('subscription_end_date', sa.Date(), nullable=True, comment='구독종료일'),
    sa.Column('next_billing_date', sa.Date(), nullable=True, comment='다음결제일'),
    sa.Column('auto_renewal', sa.Boolean(), nullable=False, comment='자동갱신여부'),
    sa.Column('renewal_plan_code', sa.String(length=50), nullable=True, comment='갱신요금제코드'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='생성일시'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='수정일시'),
    sa.CheckConstraint("subscription_status IN ('active', 'suspended', 'cancelled', 'expired')", name='check_subscription_status_valid'),
    sa.CheckConstraint('subscription_start_date <= subscription_end_date OR subscription_end_date IS NULL', name='check_subscription_dates_valid'),
    sa.ForeignKeyConstraint(['plan_code'], ['subscription_plans.plan_code'], ),
    sa.ForeignKeyConstraint(['user_uuid'], ['users.user_uuid'], ),
    sa.PrimaryKeyConstraint('id'),
    comment='사용자별 현재 구독 상태를 관리하는 마스터 테이블'
    )
    op.create_index('idx_subscription_master_billing_date', 'subscription_master', ['next_billing_date'], unique=False)
    op.create_index('idx_subscription_master_plan_code', 'subscription_master', ['plan_code'], unique=False)
    op.create_index('idx_subscription_master_status', 'subscription_master', ['subscription_status'], unique=False)
    op.create_index('idx_subscription_master_user_uuid', 'subscription_master', ['user_uuid'], unique=False)
    op.create_index(op.f('ix_subscription_master_id'), 'subscription_master', ['id'], unique=False)
    op.create_index(op.f('ix_subscription_master_plan_code'), 'subscription_master', ['plan_code'], unique=False)
    op.create_index(op.f('ix_subscription_master_subscription_id'), 'subscription_master', ['subscription_id'], unique=True)
    op.create_index(op.f('ix_subscription_master_user_uuid'), 'subscription_master', ['user_uuid'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_subscription_plans_plan_code'), table_name='subscription_plans')
    op.create_index('ix_subscription_plans_plan_code', 'subscription_plans', ['plan_code'], unique=False)
    op.drop_index(op.f('ix_subscription_master_user_uuid'), table_name='subscription_master')
    op.drop_index(op.f('ix_subscription_master_subscription_id'), table_name='subscription_master')
    op.drop_index(op.f('ix_subscription_master_plan_code'), table_name='subscription_master')
    op.drop_index(op.f('ix_subscription_master_id'), table_name='subscription_master')
    op.drop_index('idx_subscription_master_user_uuid', table_name='subscription_master')
    op.drop_index('idx_subscription_master_status', table_name='subscription_master')
    op.drop_index('idx_subscription_master_plan_code', table_name='subscription_master')
    op.drop_index('idx_subscription_master_billing_date', table_name='subscription_master')
    op.drop_table('subscription_master')
    op.drop_index(op.f('ix_subscription_change_history_user_uuid'), table_name='subscription_change_history')
    op.drop_index(op.f('ix_subscription_change_history_subscription_id'), table_name='subscription_change_history')
    op.drop_index(op.f('ix_subscription_change_history_id'), table_name='subscription_change_history')
    op.drop_index(op.f('ix_subscription_change_history_change_id'), table_name='subscription_change_history')
    op.drop_index('idx_subscription_change_user_uuid', table_name='subscription_change_history')
    op.drop_index('idx_subscription_change_type', table_name='subscription_change_history')
    op.drop_index('idx_subscription_change_subscription_id', table_name='subscription_change_history')
    op.drop_index('idx_subscription_change_processed_at', table_name='subscription_change_history')
    op.drop_index('idx_subscription_change_effective_date', table_name='subscription_change_history')
    op.drop_table('subscription_change_history')
    # ### end Alembic commands ###
