"""change_user_id_to_user_uuid_in_all_tables

Revision ID: 3259811907a1
Revises: bc99f084d1a1
Create Date: 2025-08-14 23:16:43.283592

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '3259811907a1'
down_revision: Union[str, None] = 'bc99f084d1a1'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    from sqlalchemy import text
    connection = op.get_bind()
    
    # 1. transcription_requests 테이블 처리
    op.add_column('transcription_requests', sa.Column('user_uuid', sa.String(length=36), nullable=True))
    
    # user_id를 user_uuid로 매핑 (users 테이블의 user_id -> user_uuid 매핑 사용)
    connection.execute(text("""
        UPDATE transcription_requests 
        SET user_uuid = users.user_uuid 
        FROM users 
        WHERE transcription_requests.user_id = users.user_id
    """))
    
    op.drop_index('ix_transcription_requests_user_id', table_name='transcription_requests')
    op.create_index(op.f('ix_transcription_requests_user_uuid'), 'transcription_requests', ['user_uuid'], unique=False)
    op.drop_column('transcription_requests', 'user_id')
    
    # 2. api_usage_logs 테이블 처리
    op.add_column('api_usage_logs', sa.Column('user_uuid', sa.String(length=36), nullable=True))
    
    connection.execute(text("""
        UPDATE api_usage_logs 
        SET user_uuid = users.user_uuid 
        FROM users 
        WHERE api_usage_logs.user_id = users.user_id
    """))
    
    op.drop_index('ix_api_usage_logs_user_id', table_name='api_usage_logs')
    op.create_index(op.f('ix_api_usage_logs_user_uuid'), 'api_usage_logs', ['user_uuid'], unique=False)
    op.drop_column('api_usage_logs', 'user_id')
    
    # 3. login_logs 테이블 처리
    op.add_column('login_logs', sa.Column('user_uuid', sa.String(length=36), nullable=True))
    
    connection.execute(text("""
        UPDATE login_logs 
        SET user_uuid = users.user_uuid 
        FROM users 
        WHERE login_logs.user_id = users.user_id
    """))
    
    # login_logs는 NOT NULL이므로 매핑되지 않은 레코드가 있으면 삭제하거나 처리 필요
    op.alter_column('login_logs', 'user_uuid', nullable=False)
    
    op.drop_index('ix_login_logs_user_id', table_name='login_logs')
    op.create_index(op.f('ix_login_logs_user_uuid'), 'login_logs', ['user_uuid'], unique=False)
    op.drop_column('login_logs', 'user_id')
    
    # 4. api_tokens 테이블 처리
    op.add_column('api_tokens', sa.Column('user_uuid', sa.String(length=36), nullable=True))
    
    connection.execute(text("""
        UPDATE api_tokens 
        SET user_uuid = users.user_uuid 
        FROM users 
        WHERE api_tokens.user_id = users.user_id
    """))
    
    # api_tokens는 NOT NULL이므로 매핑되지 않은 레코드가 있으면 삭제하거나 처리 필요
    op.alter_column('api_tokens', 'user_uuid', nullable=False)
    
    op.drop_index('ix_api_tokens_user_id', table_name='api_tokens')
    op.create_index(op.f('ix_api_tokens_user_uuid'), 'api_tokens', ['user_uuid'], unique=False)
    op.drop_column('api_tokens', 'user_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('transcription_requests', sa.Column('user_id', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_transcription_requests_user_uuid'), table_name='transcription_requests')
    op.create_index('ix_transcription_requests_user_id', 'transcription_requests', ['user_id'], unique=False)
    op.drop_column('transcription_requests', 'user_uuid')
    op.add_column('login_logs', sa.Column('user_id', sa.VARCHAR(length=100), autoincrement=False, nullable=False))
    op.drop_index(op.f('ix_login_logs_user_uuid'), table_name='login_logs')
    op.create_index('ix_login_logs_user_id', 'login_logs', ['user_id'], unique=False)
    op.drop_column('login_logs', 'user_uuid')
    op.add_column('api_usage_logs', sa.Column('user_id', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_api_usage_logs_user_uuid'), table_name='api_usage_logs')
    op.create_index('ix_api_usage_logs_user_id', 'api_usage_logs', ['user_id'], unique=False)
    op.drop_column('api_usage_logs', 'user_uuid')
    op.add_column('api_tokens', sa.Column('user_id', sa.VARCHAR(length=100), autoincrement=False, nullable=False))
    op.drop_index(op.f('ix_api_tokens_user_uuid'), table_name='api_tokens')
    op.create_index('ix_api_tokens_user_id', 'api_tokens', ['user_id'], unique=False)
    op.drop_column('api_tokens', 'user_uuid')
    # ### end Alembic commands ###
